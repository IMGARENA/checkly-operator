name: Build and push
on:
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: imgarena/checkly-operator
  USE_EXISTING_CLUSTER: true
  GO_MODULES: on

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v1

      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.17

      - name: Start kind cluster
        uses: helm/kind-action@v1.2.0
        with:
          version: "v0.12.0"

      - name: Test code
        env:
          USE_EXISTING_CLUSTER: true
        run: |
          make test-ci

      # Sonarcloud
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GO_MODULES: "on"

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Check Dockerfile with hadolint
      - uses: hadolint/hadolint-action@v2.1.0
        with:
          dockerfile: Dockerfile

      # Docker build specifics
      - name: Docker meta
        id: docker_meta # you'll use this in the next step
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # Docker tags based on the following events/attributes
          tags: |
            type=sha

      - name: Build multi-platform images
        uses: docker/build-push-action@v2
        with:
          context: .
          # platforms: linux/amd64,linux/arm/v7 - TODO figure out how to build arm/v7 images
          platforms: linux/amd64
          load: true
          tags: ${{ steps.docker_meta.outputs.tags }}

      - name: Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.docker_meta.outputs.tags }}
          format: 'table'
          exit-code: '1'

      - name: NPM Install packages for semantic-release
        run: |
          npm install

      - name: Release
        uses: cycjimmy/semantic-release-action@v3
        id: semantic # The `id` for output variables
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag docker container for release
        if: ${{ steps.semantic.outputs.new_release_version }}
        env:
          IMAGE: ${{ env.REGISTRY }}/${{env.IMAGE_NAME}}:${{ steps.semantic.outputs.new_release_version }}
        run: |
          docker tag ${{ steps.docker_meta.outputs.tags }} ${{ env.IMAGE }}

      - name: Build multi-platform images
        uses: docker/build-push-action@v2
        if: ${{ steps.semantic.outputs.new_release_version }}
        with:
          context: .
          # platforms: linux/amd64,linux/arm/v7 - TODO figure out how to build arm/v7 images
          platforms: linux/amd64
          push: true
          tags: ${{ steps.semantic.outputs.new_release_version }}
